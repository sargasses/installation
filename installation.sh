#!/bin/bash
#
# Copyright 2013-2014 
# Développé par : Stéphane HACQUARD
# Date : 10-02-2014
# Version 2.0
# Pour plus de renseignements : stephane.hacquard@sargasses.fr



#############################################################################
# Variables d'environnement
#############################################################################


DIALOG=${DIALOG=dialog}

password_root_mysql=password

password_postgres_postgres=password
password_root_postgres=password


#############################################################################
# Fonction Verification Version Debian  
#############################################################################


if grep "Debian GNU/Linux 6.0" /etc/issue.net > /dev/null ||
   grep "Debian GNU/Linux 7" /etc/issue.net > /dev/null ; then
	echo "Version Debian OK!"
else
	echo "Version Debian Obsolete!"
	exit
fi


#############################################################################
# Fonction Verification installation de dialog
#############################################################################


if [ ! -f /usr/bin/dialog ] ; then
	echo "Le programme dialog n'est pas installé!"
	apt-get install dialog
else
	echo "Le programme dialog est déjà installé!"
fi


#############################################################################
# Fonction Activation De La Banner Pour SSH
#############################################################################


if grep "^#Banner" /etc/ssh/sshd_config > /dev/null ; then
	echo "Configuration de Banner en cours!"
	sed -i "s/#Banner/Banner/g" /etc/ssh/sshd_config 
	/etc/init.d/ssh reload
else 
	echo "Banner déjà activée!"
fi


#############################################################################
# Fonction Configuration des Locales  
#############################################################################


if grep "LANG=fr_FR.UTF-8" /etc/default/locale > /dev/null ; then
	echo "Configuration des Locales déjà fait!"
else
	echo "Configuration des Locales en cours!"

	if grep "^`echo $LANG`" /etc/locale.gen > /dev/null ; then
		sed -i '/^'`echo $LANG`'/d' /etc/locale.gen 
	fi

	if grep "^# fr_FR.UTF-8 UTF-8" /etc/locale.gen > /dev/null ; then
		sed -i "s/# fr_FR.UTF-8 UTF-8/fr_FR.UTF-8 UTF-8/g" /etc/locale.gen 
	fi

	if grep "^# fr_FR@euro ISO-8859-15" /etc/locale.gen > /dev/null ; then
		sed -i "s/# fr_FR@euro ISO-8859-15/fr_FR@euro ISO-8859-15/g" /etc/locale.gen 
	fi

	echo "#  File generated by update-locale" > /etc/default/locale
	echo "LANG=fr_FR.UTF-8" >> /etc/default/locale
	
	locale-gen > /dev/null

	exit
fi


#############################################################################
# Fonction Recherche Version PERL  
#############################################################################

fichtemp=`tempfile 2>/dev/null` || fichtemp=/tmp/test$$


if [ -d /usr/lib/perl ] ; then
	ls /usr/lib/perl/ >$fichtemp
	version_perl=$(sed '$!d' $fichtemp)
	rm -f $fichtemp
	echo "Version PERL est: $version_perl"
else
	echo "Le programme PERL n'est pas installé!"
fi


#############################################################################
# Fonction Parametrage Proxy pour wget   
#############################################################################


if [ -f /etc/apt/apt.conf ] ; then
 
	if grep "http::Proxy" /etc/apt/apt.conf > /dev/null ; then
	fichtemp=`tempfile 2>/dev/null` || fichtemp=/tmp/test$$

	sed -n 's/.*Proxy\ \(.*\);.*/\1/ip' /etc/apt/apt.conf > $fichtemp

	adresse_ip=$(sed -n 's/.*@\(.*\)\/.*/\1/ip' $fichtemp)
	

	sed -n 's/.*http:\/\/\(.*\):.*/\1/ip' /etc/apt/apt.conf  > $fichtemp

	user_proxy=$(sed -n 's/^\(.*\):.*/\1/ip' $fichtemp)
	password_proxy=$(sed -n 's/.*:\(.*\)@.*/\1/ip' $fichtemp)

	echo "Adresse du Proxy: $adresse_ip"
	echo "Utilisateur Proxy: $user_proxy"
	echo "Password Proxy: $password_proxy"


	if grep "http and ftp" /etc/wgetrc > /dev/null ; then
		sed -i "s/http and ftp/http, https, and ftp/g" /etc/wgetrc
	fi

	if grep "http_proxy" /etc/wgetrc > /dev/null ; then
		ligne=$(sed -n '/http_proxy/=' /etc/wgetrc)
		sed -i ""$ligne"d" /etc/wgetrc
		sed -i "$ligne"i"\http_proxy = http://$user_proxy:$password_proxy@$adresse_ip/" /etc/wgetrc
	fi

	if ! grep "https_proxy" /etc/wgetrc > /dev/null ; then
		ligne=$(sed -n '/http_proxy/=' /etc/wgetrc)
		sed -i "$ligne"i"\https_proxy = http://$user_proxy:$password_proxy@$adresse_ip/" /etc/wgetrc
	else 
		ligne=$(sed -n '/https_proxy/=' /etc/wgetrc)
		sed -i ""$ligne"d" /etc/wgetrc
		sed -i "$ligne"i"\https_proxy = http://$user_proxy:$password_proxy@$adresse_ip/" /etc/wgetrc
	fi

	if grep "^#use_proxy" /etc/wgetrc > /dev/null ; then
		sed -i "s/#use_proxy = on/use_proxy = on/g" /etc/wgetrc 
	fi

	rm -f $fichtemp
	fi

else

	if grep "https_proxy" /etc/wgetrc > /dev/null ; then
		sed -i "s/https_proxy/#https_proxy/g" /etc/wgetrc 
	fi

	if grep "http_proxy" /etc/wgetrc > /dev/null ; then
		sed -i "s/http_proxy/#http_proxy/g" /etc/wgetrc 
	fi

	if grep "use_proxy" /etc/wgetrc > /dev/null ; then
		sed -i "s/use_proxy = on/#use_proxy = on/g" /etc/wgetrc 
	fi

fi


#############################################################################
# Fonction Verification Couleur
#############################################################################

verification_installation()
{


# 0=noir, 1=rouge, 2=vert, 3=jaune, 4=bleu, 5=magenta, 6=cyan 7=blanc

if [ ! -f /usr/bin/sshpass ] ; then
	choix1="\Z1Installation SSH\Zn" 
else
	choix1="\Z2Installation SSH\Zn" 
fi

if [ ! -f /usr/bin/g++ ] ; then
	choix2="\Z1Installation Compilateur\Zn" 
else
	choix2="\Z2Installation Compilateur\Zn" 
fi

if [ ! -d /etc/apache2 ] ; then
	choix3="\Z1Installation Apache\Zn" 
else
	choix3="\Z2Installation Apache\Zn" 
fi

if [ ! -d /var/lib/mysql ] ; then
	choix4="\Z1Installation MySQL\Zn" 
else
	choix4="\Z2Installation MySQL\Zn" 
fi

if [ ! -d /var/lib/postgresql ] ; then
	choix5="\Z1Installation PostgreSQL\Zn" 
else
	choix5="\Z2Installation PostgreSQL\Zn" 
fi

if [ ! -d /etc/php5 ] ||
   [ ! -d /etc/php5/cgi ] ||
   [ ! -d /usr/share/doc/php-pear ] ||
   [ ! -d /usr/share/doc/php5-snmp ] ; then
	choix6="\Z1Installation PHP5\Zn" 
else
	choix6="\Z2Installation PHP5\Zn" 
fi

if [ ! -d /etc/phpmyadmin ] ; then
	choix7="\Z1Installation PHPMyAdmin\Zn" 
else
	choix7="\Z2Installation PHPMyAdmin\Zn" 
fi

if [ ! -d /etc/phppgadmin ] || 
   [ ! -f /etc/apache2/conf.d/phppgadmin.conf ] ; then
	choix8="\Z1Installation phpPgAdmin\Zn" 
else
	choix8="\Z2Installation phpPgAdmin\Zn" 
fi

if [ ! -f /etc/snmp/snmpd.conf ] ; then
	choix9="\Z1Installation SNMP\Zn" 
else
	choix9="\Z2Installation SNMP\Zn" 
fi

if [ ! -d /etc/fail2ban ] ; then
	choix10="\Z1Installation Fail2ban\Zn" 
else
	choix10="\Z2Installation Fail2ban\Zn" 
fi

if [ ! -f /usr/bin/ftp ] ; then
	choix11="\Z1Installation Client FTP\Zn" 
else
	choix11="\Z2Installation Client FTP\Zn" 
fi

if [ ! -f /usr/share/menu/telnet ] ; then
	choix12="\Z1Installation Client TELNET\Zn" 
else
	choix12="\Z2Installation Client TELNET\Zn" 
fi

if [ ! -f /usr/bin/smbclient ] ; then
	choix13="\Z1Installation SmbClient\Zn" 
else
	choix13="\Z2Installation SmbClient\Zn" 
fi

if [ ! -f /usr/sbin/atftpd ] ; then
	choix14="\Z1Installation TFTP Serveur\Zn" 
else
	choix14="\Z2Installation TFTP Serveur\Zn" 
fi

if [ ! -f /etc/default/rsync ] ||
   [ ! -f /etc/rsyncd.conf ] ; then
	choix15="\Z1Installation Rsync Serveur\Zn" 
else
	choix15="\Z2Installation Rsync Serveur\Zn" 
fi

if [ ! -f /usr/bin/nmap ] ; then
	choix16="\Z1Installation NMAP\Zn" 
else
	choix16="\Z2Installation NMAP\Zn" 
fi

if [ ! -d /usr/share/php/HTTP ] ; then
	choix17="\Z1Installation PEAR\Zn" 
else
	choix17="\Z2Installation PEAR\Zn" 
fi

if [ ! -d /usr/lib/perl/$version_perl/sys ] ||
   [ ! -f /etc/perl/CPAN/Config.pm ] ||
   [ ! -f /usr/local/share/perl/$version_perl/YAML.pm ] ||
   ! grep "'build_requires_install_policy' => q\[yes\]," /etc/perl/CPAN/Config.pm > /dev/null ; then
	choix18="\Z1Installation PERL\Zn" 
else
	choix18="\Z2Installation PERL\Zn" 
fi

}

#############################################################################
# Fonction Menu 
#############################################################################

menu()
{


fichtemp=`tempfile 2>/dev/null` || fichtemp=/tmp/test$$


$DIALOG --backtitle "Installation Serveur Linux" \
	 --title "Installation Serveur Linux" \
	 --clear \
	 --colors \
	 --default-item "2" \
	 --menu "Quel est votre choix" 12 46 5 \
	 "1" "Installation Serveur Linux" \
	 "2" "Quitter" 2> $fichtemp


valret=$?
choix=`cat $fichtemp`
case $valret in

 0)	# Installation Serveur Linux
	if [ "$choix" = "1" ]
	then
		rm -f $fichtemp
              menu_installation_serveur
	fi

	# Quitter
	if [ "$choix" = "2" ]
	then
		clear
	fi
	
	;;


 1)	# Appuyé sur Touche CTRL C
	echo "Appuyé sur Touche CTRL C."
	;;

 255)	# Appuyé sur Touche Echap
	echo "Appuyé sur Touche Echap."
	;;

esac

rm -f $fichtemp

exit

}

#############################################################################
# Fonction Menu Installation Serveur
#############################################################################

menu_installation_serveur()
{

verification_installation

fichtemp=`tempfile 2>/dev/null` || fichtemp=/tmp/test$$


$DIALOG --backtitle "Installation Serveur Linux" \
	 --title "Installation Serveur Linux" \
	 --clear \
	 --colors \
	 --default-item "8" \
	 --menu "Quel est votre choix" 16 50 8 \
	 "1" "$choix1" \
	 "2" "$choix2" \
	 "3" "$choix3" \
	 "4" "$choix4" \
	 "5" "$choix5" \
	 "6" "$choix6" \
	 "7" "\Z4Installation Suite\Zn" \
	 "8" "\Z4Retour\Zn" 2> $fichtemp


valret=$?
choix=`cat $fichtemp`
case $valret in

 0)	# Installation SSH
	if [ "$choix" = "1" ]
	then
		rm -f $fichtemp
		installation_ssh
	fi

	# Installation Compilateur
	if [ "$choix" = "2" ]
	then
		rm -f $fichtemp
		installation_compilateur
	fi

	# Installation Apache
	if [ "$choix" = "3" ]
	then
		rm -f $fichtemp
		installation_apache
	fi

	# Installation MySQL
	if [ "$choix" = "4" ]
	then
		rm -f $fichtemp
		installation_mysql
	fi

	# Installation PostgreSQL
	if [ "$choix" = "5" ]
	then
		rm -f $fichtemp
		installation_postgresql
	fi

	# Installation PHP5
	if [ "$choix" = "6" ]
	then
		if grep "Debian GNU/Linux 7" /etc/issue.net > /dev/null ; then
			rm -f $fichtemp
			choix_version_php5
		else
			rm -f $fichtemp
			installation_php5
		fi
	fi

	# Installation Suite 
	if [ "$choix" = "7" ]
	then
		rm -f $fichtemp
		menu_installation_serveur_suite1
	fi

	# Retour
	if [ "$choix" = "8" ]
	then
		clear
	fi
	
	;;


 1)	# Appuyé sur Touche CTRL C
	echo "Appuyé sur Touche CTRL C."
	;;

 255)	# Appuyé sur Touche Echap
	echo "Appuyé sur Touche Echap."
	;;

esac

rm -f $fichtemp

menu
}

#############################################################################
# Fonction Menu Installation Serveur Suite (1)
#############################################################################

menu_installation_serveur_suite1()
{

verification_installation

fichtemp=`tempfile 2>/dev/null` || fichtemp=/tmp/test$$


$DIALOG --backtitle "Installation Serveur Linux" \
	 --title "Installation Serveur Linux" \
	 --clear \
	 --colors \
	 --default-item "8" \
	 --menu "Quel est votre choix" 16 52 8 \
	 "1" "$choix7" \
	 "2" "$choix8" \
	 "3" "$choix9" \
	 "4" "$choix10" \
	 "5" "$choix11" \
	 "6" "$choix12" \
	 "7" "\Z4Installation Suite\Zn" \
	 "8" "\Z4Retour\Zn" 2> $fichtemp



valret=$?
choix=`cat $fichtemp`
case $valret in

 0)	# Installation PHPMyAdmin
	if [ "$choix" = "1" ]
	then
		rm -f $fichtemp
		installation_phpmyadmin
	fi

	# Installation phpPgAdmin
	if [ "$choix" = "2" ]
	then
		rm -f $fichtemp
		installation_phppgadmin
	fi

	# Installation SNMP
	if [ "$choix" = "3" ]
	then
		rm -f $fichtemp
		installation_snmp
	fi

	# Installation Fail2ban
	if [ "$choix" = "4" ]
	then
		rm -f $fichtemp
		installation_fail2ban
	fi

	# Installation Client FTP
	if [ "$choix" = "5" ]
	then
		rm -f $fichtemp
		installation_client_ftp
	fi

	# Installation Client TELNET
	if [ "$choix" = "6" ]
	then
		rm -f $fichtemp
		installation_client_telnet
	fi

	# Installation Suite 
	if [ "$choix" = "7" ]
	then
		rm -f $fichtemp
		menu_installation_serveur_suite2
	fi

	# Retour
	if [ "$choix" = "8" ]
	then
		clear
	fi
	
	;;


 1)	# Appuyé sur Touche CTRL C
	echo "Appuyé sur Touche CTRL C."
	;;

 255)	# Appuyé sur Touche Echap
	echo "Appuyé sur Touche Echap."
	;;

esac

rm -f $fichtemp

menu_installation_serveur
}

#############################################################################
# Fonction Menu Installation Serveur Suite (2)
#############################################################################

menu_installation_serveur_suite2()
{

verification_installation

fichtemp=`tempfile 2>/dev/null` || fichtemp=/tmp/test$$


$DIALOG --backtitle "Installation Serveur Linux" \
	 --title "Installation Serveur Linux" \
	 --clear \
	 --colors \
	 --default-item "7" \
	 --menu "Quel est votre choix" 15 52 7 \
	 "1" "$choix13" \
	 "2" "$choix14" \
	 "3" "$choix15" \
	 "4" "$choix16" \
	 "5" "$choix17" \
	 "6" "$choix18" \
	 "7" "\Z4Retour\Zn" 2> $fichtemp


valret=$?
choix=`cat $fichtemp`
case $valret in

 0)	# Installation SmbClient
	if [ "$choix" = "1" ]
	then
		rm -f $fichtemp
		installation_smbclient
	fi

	# Installation TFTP Serveur
	if [ "$choix" = "2" ]
	then
		rm -f $fichtemp
		installation_tftp
	fi

	# Installation Rsync Serveur
	if [ "$choix" = "3" ]
	then
		rm -f $fichtemp
		installation_rsync
	fi

	# Installation NMAP
	if [ "$choix" = "4" ]
	then
		rm -f $fichtemp
		installation_nmap
	fi

	# Installation PEAR
	if [ "$choix" = "5" ]
	then
		rm -f $fichtemp
		installation_pear
	fi

	# Installation PERL
	if [ "$choix" = "6" ]
	then
		rm -f $fichtemp
		installation_perl
	fi

	# Retour
	if [ "$choix" = "7" ]
	then
		clear
	fi
	
	;;


 1)	# Appuyé sur Touche CTRL C
	echo "Appuyé sur Touche CTRL C."
	;;

 255)	# Appuyé sur Touche Echap
	echo "Appuyé sur Touche Echap."
	;;

esac

rm -f $fichtemp

menu_installation_serveur_suite1
}

#############################################################################
# Fonction Installation SSH
#############################################################################

installation_ssh()
{

(

if [ ! -f /usr/bin/sshpass ] ; then
 echo "40" ; sleep 1
 echo "XXX" ; echo "apt-get -y install sshpass"; echo "XXX"
	apt-get -y install sshpass &> /dev/null
fi

 echo "80" ; sleep 1
 echo "XXX" ; echo "Configuration SSH en cours"; echo "XXX"

	if ! grep "UseDNS" /etc/ssh/sshd_config > /dev/null ; then
	ligne=$(sed -n '/TCPKeepAlive/=' /etc/ssh/sshd_config)
	sed -i "$ligne"a"\UseDNS no" /etc/ssh/sshd_config
	fi

	/etc/init.d/ssh reload &> /dev/null

 echo "100" ; sleep 1
 echo "XXX" ; echo "Terminer"; echo "XXX"
 sleep 2
) |
$DIALOG --backtitle "Installation Serveur Linux" \
	 --title "Installation SSH" \
	 --gauge "Installation SSH" 10 60 0 \

menu_installation_serveur
}

#############################################################################
# Fonction Installation Compilateur
#############################################################################

installation_compilateur()
{

(

if [ ! -f /usr/bin/g++ ] ; then
 echo "20" ; sleep 1
 echo "XXX" ; echo "apt-get -y install gcc make sudo g++"; echo "XXX"
	apt-get -y install gcc make sudo g++ &> /dev/null
fi

 echo "60" ; sleep 1
 echo "XXX" ; echo "apt-get -y install gcc make sudo g++"; echo "XXX"

 echo "80" ; sleep 1
 echo "XXX" ; echo "apt-get -y install gcc make sudo g++"; echo "XXX"

 echo "100" ; sleep 1
 echo "XXX" ; echo "Terminer"; echo "XXX"
 sleep 2
) |
$DIALOG --backtitle "Installation Serveur Linux" \
	 --title "Installation Compilateur" \
	 --gauge "Installation Compilateur" 10 60 0 \

menu_installation_serveur
}

#############################################################################
# Fonction Installation Apache
#############################################################################

installation_apache()
{

(

if [ ! -d /etc/apache2 ] ; then
 echo "20" ; sleep 1
 echo "XXX" ; echo "apt-get -y install apache2 apache2-mpm-prefork"; echo "XXX"
	apt-get -y install apache2 apache2-mpm-prefork &> /dev/null
fi

 echo "80" ; sleep 1
 echo "XXX" ; echo "a2enmod ssl a2ensite default-ssl"; echo "XXX"
	a2enmod ssl
	a2ensite default-ssl

	/etc/init.d/apache2 restart &> /dev/null


 echo "100" ; sleep 1
 echo "XXX" ; echo "Terminer"; echo "XXX"
 sleep 2
) |
$DIALOG --backtitle "Installation Serveur Linux" \
	 --title "Installation Apache" \
	 --gauge "Installation Apache" 10 60 0 \

menu_installation_serveur
}

#############################################################################
# Fonction Installation MySQL
#############################################################################

installation_mysql()
{

(

if [ ! -d /var/lib/mysql ] ; then
 echo "20" ; sleep 1
 echo "XXX" ; echo "export DEBIAN_FRONTEND=noninteractive"; echo "XXX"
	export DEBIAN_FRONTEND=noninteractive

 echo "40" ; sleep 1
 echo "XXX" ; echo "apt-get -y install mysql-server libmysqlclient-dev"; echo "XXX"
	apt-get -y install mysql-server libmysqlclient-dev &> /dev/null

 echo "60" ; sleep 1
 echo "XXX" ; echo "Changement password du compte root MySQL"; echo "XXX"

	cat <<- EOF > /tmp/compte_mysql.txt
	use mysql; 
	create user 'root'@'%';
	grant all privileges on *.* TO 'root'@'%' with grant option;
	update user set password=PASSWORD("$password_root_mysql") where User='root';
	EOF

	mysql -u root < /tmp/compte_mysql.txt

	rm -f /tmp/compte_mysql.txt

	if ! grep "skip-name-resolve" /etc/mysql/my.cnf > /dev/null ; then
	ligne=$(sed -n '/skip-external-locking/=' /etc/mysql/my.cnf)
	sed -i "$ligne"a"\skip-name-resolve" /etc/mysql/my.cnf
	fi

	if grep "^bind-address" /etc/mysql/my.cnf > /dev/null ; then
	sed -i "s/bind-address/#bind-address/g" /etc/mysql/my.cnf 
	fi

 echo "70" ; sleep 1
 echo "XXX" ; echo "Redemarrage MySQL en cours"; echo "XXX"
	/etc/init.d/mysql restart &> /dev/null

fi

 echo "80" ; sleep 1
 echo "XXX" ; echo "Recherche Engine Federated"; echo "XXX"
	
	cat <<- EOF > /tmp/engines.txt
	SHOW ENGINES;
	EOF

	mysql -u root -p$password_root_mysql < /tmp/engines.txt >/tmp/resultat.txt
	grep -w "^FEDERATED" /tmp/resultat.txt > /tmp/resultat-final.txt

	rm -f /tmp/engines.txt
	rm -f /tmp/resultat.txt	


if grep "NO" /tmp/resultat-final.txt > /dev/null &&
   ! grep "Federated" /etc/mysql/my.cnf > /dev/null ; then
 echo "90" ; sleep 1
 echo "XXX" ; echo "Activation Engine Federated"; echo "XXX"

	ligne=$(sed -n '/Security Features/=' /etc/mysql/my.cnf)
	sed -i "$ligne"i"\# * Federated" /etc/mysql/my.cnf
	sed -i "`expr $ligne + 1`"i"\#" /etc/mysql/my.cnf
	sed -i "`expr $ligne + 2`"i"\# The FEDERATED storage engine is disabled by default" /etc/mysql/my.cnf
	sed -i "`expr $ligne + 3`"i"\#" /etc/mysql/my.cnf
	sed -i "`expr $ligne + 4`"i"\federated=on" /etc/mysql/my.cnf
	sed -i "`expr $ligne + 5`"i"\#" /etc/mysql/my.cnf

	/etc/init.d/mysql restart &> /dev/null	
fi

rm -f /tmp/resultat-final.txt

 echo "100" ; sleep 1
 echo "XXX" ; echo "Terminer"; echo "XXX"
 sleep 2
) |
$DIALOG --backtitle "Installation Serveur Linux" \
	 --title "Installation MySQL" \
	 --gauge "Installation MySQL" 10 60 0 \

menu_installation_serveur
}

#############################################################################
# Fonction Installation PostgreSQL
#############################################################################

installation_postgresql()
{

(

fichtemp=`tempfile 2>/dev/null` || fichtemp=/tmp/test$$

if [ ! -d /var/lib/postgresql ] ; then
 echo "20" ; sleep 1
 echo "XXX" ; echo "apt-get -y install postgresql postgresql-client"; echo "XXX"
	apt-get -y install postgresql postgresql-client &> /dev/null

 echo "60" ; sleep 1
 echo "XXX" ; echo "Changement password du compte postgres PostgreSQL"; echo "XXX"
	
	cat <<- EOF > /tmp/compte_postgres.txt
	ALTER ROLE postgres PASSWORD '$password_postgres_postgres';
	CREATE USER root PASSWORD '$password_root_postgres' SUPERUSER INHERIT CREATEDB CREATEROLE;
	CREATE DATABASE root
	EOF

	su - postgres -c psql < /tmp/compte_postgres.txt

	rm -f /tmp/compte_postgres.txt

 echo "80" ; sleep 1
 echo "XXX" ; echo "Configuration PostgreSQL en cours"; echo "XXX"

	ls /etc/postgresql/ >$fichtemp
	version_postgresql=$(sed '$!d' $fichtemp)
	
	if grep "^#listen_addresses" /etc/postgresql/$version_postgresql/main/postgresql.conf > /dev/null ; then
		sed -i "s/#listen_addresses = 'localhost'/listen_addresses = '*'/g" /etc/postgresql/$version_postgresql/main/postgresql.conf 
	fi

	if ! grep "0.0.0.0" /etc/postgresql/$version_postgresql/main/pg_hba.conf > /dev/null ; then

		if grep "Debian GNU/Linux 7" /etc/issue.net > /dev/null ; then
		ligne=$(sed -n '/# IPv6 local connections:/=' /etc/postgresql/$version_postgresql/main/pg_hba.conf) 
		sed -i "$ligne"i"\host    all             all             0.0.0.0/0               md5" /etc/postgresql/$version_postgresql/main/pg_hba.conf
		else
		ligne=$(sed -n '/# IPv6 local connections:/=' /etc/postgresql/$version_postgresql/main/pg_hba.conf) 
		sed -i "$ligne"i"\host    all         all         0.0.0.0\/0             md5" /etc/postgresql/$version_postgresql/main/pg_hba.conf
		fi	
	fi

	rm -f $fichtemp

	
 echo "90" ; sleep 1
 echo "XXX" ; echo "Redemarrage PostgreSQL en cours"; echo "XXX"

	/etc/init.d/postgresql restart &> /dev/null
	
fi

 echo "100" ; sleep 1
 echo "XXX" ; echo "Terminer"; echo "XXX"
 sleep 2
) |
$DIALOG --backtitle "Installation Serveur Linux" \
	 --title "Installation PostgreSQL" \
	 --gauge "Installation PostgreSQL" 10 60 0 \

menu_installation_serveur
}

#############################################################################
# Fonction Choix Version PHP Debian 7
#############################################################################

choix_version_php5()
{

fichtemp=`tempfile 2>/dev/null` || fichtemp=/tmp/test$$

(
 echo "10" ; sleep 1
) |
$DIALOG --ok-label "Validation" \
	 --nocancel \
	 --backtitle "Installation Serveur Linux" \
	 --title "Installation PHP5" \
	 --default-item "1" \
	 --menu "Quel est votre choix" 10 48 2 \
	 "1" "Installation PHP Version 5.3" \
	 "2" "Installation PHP Version 5.4" 2> $fichtemp

valret=$?
choix=`cat $fichtemp`
case $valret in

 0)	# Installation PHP Version 5.3
	if [ "$choix" = "1" ]
	then

	if ! grep "squeeze main non-free" /etc/apt/sources.list > /dev/null ; then
		echo "" >> /etc/apt/sources.list
		echo "deb http://ftp.fr.debian.org/debian/ squeeze main non-free" >> /etc/apt/sources.list
		echo "deb-src http://ftp.fr.debian.org/debian/ squeeze main non-free" >> /etc/apt/sources.list
		echo "" >> /etc/apt/sources.list
		echo "deb http://security.debian.org/ squeeze/updates main non-free" >> /etc/apt/sources.list
		echo "deb-src http://security.debian.org/ squeeze/updates main non-free" >> /etc/apt/sources.list
	fi

	if [ ! -f /etc/apt/preferences.d/preferences ] ; then

	cat <<- EOF > /etc/apt/preferences.d/preferences
	Package: php5*
	Pin: release a=oldstable
	Pin-Priority: 700

	Package: libapache2-mod-php5
	Pin: release a=oldstable
	Pin-Priority: 700

	Package: php-pear
	Pin: release a=oldstable
	Pin-Priority: 700

	Package: *
	Pin: release a=stable
	Pin-Priority: 600	
	EOF

	fi

	apt-get update &> /dev/null
	rm -f $fichtemp
	installation_php5
	fi


	# Installation PHP Version 5.4
	if [ "$choix" = "2" ]
	then
	rm -f $fichtemp
	installation_php5
	fi
	
	;;


 1)	# Appuyé sur Touche CTRL C
	echo "Appuyé sur Touche CTRL C."
	rm -f $fichtemp
	;;

 255)	# Appuyé sur Touche Echap
	echo "Appuyé sur Touche Echap."
	rm -f $fichtemp
	;;

esac

menu_installation_serveur
}

#############################################################################
# Fonction Installation PHP5
#############################################################################

installation_php5()
{

(

if [ ! -d /etc/php5 ] ; then
 echo "20" ; sleep 1
 echo "XXX" ; echo "apt-get -y install php5 php5-mysql php5-pgsql"; echo "XXX"
	apt-get -y install php5 php5-mysql php5-pgsql &> /dev/null
fi

if [ ! -d /etc/php5/cgi ] ; then
 echo "40" ; sleep 1
 echo "XXX" ; echo "apt-get -y install php5-gd php5-cgi libapache2-mod-php5"; echo "XXX"
	apt-get -y install php5-gd php5-cgi libapache2-mod-php5 &> /dev/null
fi

if [ ! -d /usr/share/doc/php5-snmp ] ; then
 echo "60" ; sleep 1
 echo "XXX" ; echo "apt-get -y install php-pear php5-ldap php5-snmp"; echo "XXX"
	apt-get -y install php-pear php5-ldap php5-snmp &> /dev/null
fi

 echo "80" ; sleep 1
 echo "XXX" ; echo "Installation PHP5 en cours"; echo "XXX"

 echo "100" ; sleep 1
 echo "XXX" ; echo "Terminer"; echo "XXX"
 sleep 2
) |
$DIALOG --backtitle "Installation Serveur Linux" \
	 --title "Installation PHP5" \
	 --gauge "Installation PHP5" 10 60 0 \

menu_installation_serveur
}

#############################################################################
# Fonction Installation PHPMyAdmin
#############################################################################

installation_phpmyadmin()
{

(

if [ ! -d /etc/phpmyadmin ] ; then
 echo "20" ; sleep 1
 echo "XXX" ; echo "export DEBIAN_FRONTEND=noninteractive"; echo "XXX"
	export DEBIAN_FRONTEND=noninteractive

 echo "60" ; sleep 1
 echo "XXX" ; echo "apt-get -y install phpmyadmin"; echo "XXX"
	apt-get -y install phpmyadmin &> /dev/null
fi

if [ ! -f /etc/apache2/conf.d/phpmyadmin.conf ] ; then
 echo "80" ; sleep 1
 echo "XXX" ; echo "Configuration PHPMyAdmin en cours"; echo "XXX"
	ln -s /etc/phpmyadmin/apache.conf /etc/apache2/conf.d/phpmyadmin.conf &> /dev/null

	cat <<- EOF > /etc/phpmyadmin/config-db.php
	<?php
	##
	## database access settings in php format
	## automatically generated from /etc/dbconfig-common/phpmyadmin.conf
	## by /usr/sbin/dbconfig-generate-include
	## `date '+date: %d/%m/%y %H:%M:%S'`
	##
	## by default this file is managed via ucf, so you shouldn't have to
	## worry about manual changes being silently discarded.  *however*,
	## you'll probably also want to edit the configuration file mentioned
	## above too.
	##
	\$dbuser='';
	\$dbpass='';
	\$basepath='';
	\$dbname='';
	\$dbserver='';
	\$dbport='';
	\$dbtype='mysql';
	EOF

	/etc/init.d/apache2 reload &> /dev/null
fi

 echo "100" ; sleep 1
 echo "XXX" ; echo "Terminer"; echo "XXX"
 sleep 2
) |
$DIALOG --backtitle "Installation Serveur Linux" \
	 --title "Installation PHPMyAdmin" \
	 --gauge "Installation PHPMyAdmin" 10 60 0 \

menu_installation_serveur_suite1
}

#############################################################################
# Fonction Installation phpPgAdmin
#############################################################################

installation_phppgadmin()
{

(

if [ ! -d /etc/phppgadmin ] ; then
 echo "20" ; sleep 1
 echo "XXX" ; echo "apt-get -y install phppgadmin"; echo "XXX"
	apt-get -y  install phppgadmin &> /dev/null
fi

 echo "80" ; sleep 1
 echo "XXX" ; echo "Configuration phpPgAdmin en cours"; echo "XXX"
	
	if [ ! -f /etc/apache2/conf.d/phppgadmin.conf ] ; then
		mv /etc/apache2/conf.d/phppgadmin /etc/apache2/conf.d/phppgadmin.conf
	fi

	if grep "^deny from all" /etc/apache2/conf.d/phppgadmin.conf > /dev/null ; then
		sed -i "s/deny from all/#deny from all/g" /etc/apache2/conf.d/phppgadmin.conf 
	fi

	if grep "^allow from 127.0.0.0" /etc/apache2/conf.d/phppgadmin.conf > /dev/null ; then
		sed -i "s/allow from 127.0.0.0/#allow from 127.0.0.0/g" /etc/apache2/conf.d/phppgadmin.conf 
	fi

	if grep "^# allow from all" /etc/apache2/conf.d/phppgadmin.conf > /dev/null ; then
		sed -i "s/# allow from all/allow from all/g" /etc/apache2/conf.d/phppgadmin.conf 
	fi

	if grep "$conf\['extra_login_security'\] = true;" /etc/phppgadmin/config.inc.php > /dev/null ; then
		sed -i "s/$conf\['extra_login_security'\] = true;/$conf\['extra_login_security'\] = false;/g" /etc/phppgadmin/config.inc.php 
	fi

	/etc/init.d/apache2 restart &> /dev/null


 echo "100" ; sleep 1
 echo "XXX" ; echo "Terminer"; echo "XXX"
 sleep 2
) |
$DIALOG --backtitle "Installation Serveur Linux" \
	 --title "Installation phpPgAdmin" \
	 --gauge "Installation phpPgAdmin" 10 60 0 \

menu_installation_serveur_suite1
}

#############################################################################
# Fonction Installation SNMP
#############################################################################

installation_snmp()
{

(

if [ ! -f /etc/snmp/snmpd.conf ] ; then
 echo "20" ; sleep 1
 echo "XXX" ; echo "apt-get -y install snmp snmpd"; echo "XXX"
	apt-get -y install snmp snmpd &> /dev/null
fi

 echo "80" ; sleep 1
 echo "XXX" ; echo "Configuration SNMP en cours"; echo "XXX"

	if grep "^agentAddress" /etc/snmp/snmpd.conf > /dev/null ; then

		if grep "^agentAddress  udp:127.0.0.1:161" /etc/snmp/snmpd.conf > /dev/null ; then
		sed -i "s/agentAddress  udp:127.0.0.1:161/#agentAddress  udp:127.0.0.1:161/g" /etc/snmp/snmpd.conf
		fi

		if grep "^#agentAddress udp:161" /etc/snmp/snmpd.conf > /dev/null ; then
		sed -i "s/#agentAddress udp:161/agentAddress udp:161/g" /etc/snmp/snmpd.conf
		fi

		if grep "^ rocommunity public  default" /etc/snmp/snmpd.conf > /dev/null ; then
		sed -i "s/ rocommunity public  default/#rocommunity public  default/g" /etc/snmp/snmpd.conf
		fi

		if ! grep "^rocommunity public" /etc/snmp/snmpd.conf > /dev/null ; then
		ligne=$(sed -n '/Full access from the local host/=' /etc/snmp/snmpd.conf)
		sed -i "$ligne"i"\ \t\t\t\t\t\t\t#  Full access" /etc/snmp/snmpd.conf
		sed -i "$ligne"a"\rocommunity public" /etc/snmp/snmpd.conf
		fi

		if grep "^defaultMonitors          yes" /etc/snmp/snmpd.conf > /dev/null ; then
		sed -i "s/defaultMonitors          yes/defaultMonitors          no/g" /etc/snmp/snmpd.conf
		fi
	fi

	if grep "^com2sec" /etc/snmp/snmpd.conf > /dev/null ; then


		if grep "^com2sec paranoid  default" /etc/snmp/snmpd.conf > /dev/null ; then
		sed -i "s/com2sec paranoid  default/#com2sec paranoid  default/g" /etc/snmp/snmpd.conf
		fi

		if grep "^#com2sec readonly  default" /etc/snmp/snmpd.conf > /dev/null ; then
		sed -i "s/#com2sec readonly  default/com2sec readonly  default/g" /etc/snmp/snmpd.conf
		fi

		if grep "snmpd.pid 127.0.0.1" /etc/default/snmpd > /dev/null ; then
		sed -i "s/snmpd.pid 127.0.0.1/snmpd.pid/g" /etc/default/snmpd
		fi
	fi

	/etc/init.d/snmpd restart

 echo "100" ; sleep 1
 echo "XXX" ; echo "Terminer"; echo "XXX"
 sleep 2
) |
$DIALOG --backtitle "Installation Serveur Linux" \
	 --title "Installation SNMP" \
	 --gauge "Installation SNMP" 10 60 0 \

menu_installation_serveur_suite1
}

#############################################################################
# Fonction Installation Fail2ban
#############################################################################

installation_fail2ban()
{

(

if [ ! -d /etc/fail2ban ] ; then
 echo "20" ; sleep 1
 echo "XXX" ; echo "apt-get -y install fail2ban"; echo "XXX"
	apt-get -y install fail2ban &> /dev/null
fi

 echo "80" ; sleep 1
 echo "XXX" ; echo "apt-get -y install fail2ban"; echo "XXX"

 echo "100" ; sleep 1
 echo "XXX" ; echo "Terminer"; echo "XXX"
 sleep 2
) |
$DIALOG --backtitle "Installation Serveur Linux" \
	 --title "Installation Fail2ban" \
	 --gauge "Installation Fail2ban" 10 60 0 \

menu_installation_serveur_suite1
}

#############################################################################
# Fonction Installation Client FTP
#############################################################################

installation_client_ftp()
{

(

if [ ! -f /usr/bin/ftp ] ; then
 echo "20" ; sleep 1
 echo "XXX" ; echo "apt-get -y install ftp"; echo "XXX"
	apt-get -y install ftp &> /dev/null
fi

 echo "60" ; sleep 1
 echo "XXX" ; echo "apt-get -y install ftp"; echo "XXX"

 echo "100" ; sleep 1
 echo "XXX" ; echo "Terminer"; echo "XXX"
 sleep 2
) |
$DIALOG --backtitle "Installation Serveur Linux" \
	 --title "Installation Client FTP" \
	 --gauge "Installation Client FTP" 10 60 0 \

menu_installation_serveur_suite1
}

#############################################################################
# Fonction Installation Client TELNET
#############################################################################

installation_client_telnet()
{

(

if [ ! -f /usr/share/menu/telnet ] ; then
 echo "20" ; sleep 1
 echo "XXX" ; echo "apt-get -y install telnet"; echo "XXX"
	apt-get -y install telnet &> /dev/null
fi

 echo "60" ; sleep 1
 echo "XXX" ; echo "apt-get -y install telnet"; echo "XXX"

 echo "100" ; sleep 1
 echo "XXX" ; echo "Terminer"; echo "XXX"
 sleep 2
) |
$DIALOG --backtitle "Installation Serveur Linux" \
	 --title "Installation Client TELNET" \
	 --gauge "Installation Client TELNET" 10 60 0 \

menu_installation_serveur_suite1
}

#############################################################################
# Fonction Installation SmbClient
#############################################################################

installation_smbclient()
{

(

fichtemp=`tempfile 2>/dev/null` || fichtemp=/tmp/test$$


if [ ! -f /usr/bin/smbclient ] ; then

 echo "20" ; sleep 1
 echo "XXX" ; echo "Recherche SmbClient en cours"; echo "XXX"
	apt-cache search smbclient > $fichtemp
	apt-cache search smbfs >> $fichtemp
	apt-cache search cifs-utils  >> $fichtemp

 echo "40" ; sleep 1
 echo "XXX" ; echo "export DEBIAN_FRONTEND=noninteractive"; echo "XXX"
	export DEBIAN_FRONTEND=noninteractive

 echo "60" ; sleep 1
 echo "XXX" ; echo "Installation SmbClient en cours"; echo "XXX"

	if grep -w "smbclient" $fichtemp > /dev/null ; then
	apt-get -y install smbclient &> /dev/null
	fi

	if grep -w "smbfs" $fichtemp > /dev/null ; then
	apt-get -y install smbfs &> /dev/null
	fi

	if grep -w "cifs-utils" $fichtemp > /dev/null ; then
	apt-get -y install cifs-utils &> /dev/null
	fi

rm -f $fichtemp
fi

 echo "100" ; sleep 1
 echo "XXX" ; echo "Terminer"; echo "XXX"
 sleep 2
) |
$DIALOG --backtitle "Installation Serveur Linux" \
	 --title "Installation SmbClient" \
	 --gauge "Installation SmbClient" 10 60 0 \

menu_installation_serveur_suite2
}

#############################################################################
# Fonction Installation TFTP Serveur
#############################################################################

installation_tftp()
{

(

if [ ! -f /usr/sbin/atftpd ] ; then
 echo "20" ; sleep 1
 echo "XXX" ; echo "apt-get -y install atftpd"; echo "XXX"
	apt-get -y install --no-install-recommends atftpd &> /dev/null
fi

if [ ! -f /usr/bin/atftp ] ; then
 echo "40" ; sleep 1
 echo "XXX" ; echo "apt-get -y install atftp"; echo "XXX"
	apt-get -y install atftp &> /dev/null
fi

if [ ! -d /tftp ] ; then
 echo "60" ; sleep 1
 echo "XXX" ; echo "Configuration Serveur TFTP en cours"; echo "XXX"
	mkdir /tftp
	chmod 777 /tftp

	adresse_ip=`ifconfig eth0 | sed -n 's/.*inet adr:\([^.]*.[^.]*.[^.]*.[^ ]*\).*$/\1/p'`

	cat <<- EOF > /etc/default/atftpd
	USE_INETD=false
	OPTIONS="--daemon --bind-address $adresse_ip --tftpd-timeout 300 --retry-timeout 5 --mcast-port 1758 --mcast-addr 239.239.239.0-255 --mcast-ttl 1 --maxthread 100 --verbose=5 /tftp"
	EOF

	/etc/init.d/atftpd restart
fi

 echo "100" ; sleep 1
 echo "XXX" ; echo "Terminer"; echo "XXX"
 sleep 2
) |
$DIALOG --backtitle "Installation Serveur Linux" \
	 --title "Installation TFTP Serveur" \
	 --gauge "Installation TFTP Serveur" 10 60 0 \

menu_installation_serveur_suite2
}

#############################################################################
# Fonction Installation Rsync Serveur
#############################################################################

installation_rsync()
{

(

if [ ! -f /etc/default/rsync ] ; then
 echo "20" ; sleep 1
 echo "XXX" ; echo "apt-get -y install rsync"; echo "XXX"
	apt-get -y install rsync &> /dev/null
fi

if [ ! -d /rsync ] ; then
 echo "60" ; sleep 1
 echo "XXX" ; echo "Configuration Rsync en cours"; echo "XXX"
	mkdir /rsync
	chmod 777 /rsync
fi

if [ ! -f /etc/rsyncd.conf ] ; then
 echo "80" ; sleep 1
 echo "XXX" ; echo "Configuration Rsync en cours"; echo "XXX"
	
	if grep "^RSYNC_ENABLE=false" /etc/default/rsync > /dev/null ; then
	sed -i "s/RSYNC_ENABLE=false/RSYNC_ENABLE=true/g" /etc/default/rsync
	fi

	cat <<- EOF > /etc/rsyncd.conf
	uid = root
	gid = root
	use chroot = no
	max connections = 5
	pid file = /var/run/rsyncd.pid
	
	[rsync]
	path = /rsync
	comment = Dossier Rsync
	read only = no
	EOF

	/etc/init.d/rsync restart
fi

 echo "100" ; sleep 1
 echo "XXX" ; echo "Terminer"; echo "XXX"
 sleep 2
) |
$DIALOG --backtitle "Installation Serveur Linux" \
	 --title "Installation Rsync Serveur" \
	 --gauge "Installation Rsync Serveur" 10 60 0 \

menu_installation_serveur_suite2
}

#############################################################################
# Fonction Installation NMAP
#############################################################################

installation_nmap()
{

(

if [ ! -f /usr/bin/nmap ] ; then
 echo "20" ; sleep 1
 echo "XXX" ; echo "apt-get -y install nmap"; echo "XXX"
	apt-get -y install nmap &> /dev/null
fi

 echo "60" ; sleep 1
 echo "XXX" ; echo "apt-get -y install nmap"; echo "XXX"

 echo "100" ; sleep 1
 echo "XXX" ; echo "Terminer"; echo "XXX"
 sleep 2
) |
$DIALOG --backtitle "Installation Serveur Linux" \
	 --title "Installation NMAP" \
	 --gauge "Installation NMAP" 10 60 0 \

menu_installation_serveur_suite2
}

#############################################################################
# Fonction Installation PEAR
#############################################################################

installation_pear()
{

(

if [ -f /etc/apt/apt.conf ] ; then
 echo "20" ; sleep 1
 echo "XXX" ; echo "Recherche d'un Proxy"; echo "XXX"

	if grep "http::Proxy" /etc/apt/apt.conf > /dev/null ; then
	fichtemp=`tempfile 2>/dev/null` || fichtemp=/tmp/test$$

	sed -n 's/.*Proxy\ \(.*\);.*/\1/ip' /etc/apt/apt.conf > $fichtemp
	proxy=$(sed 's/^["\t]*//;s/["\t]*$//' $fichtemp)

	pear config-set http_proxy "$proxy"

	rm -f $fichtemp
	fi
fi

if [ ! -d /usr/share/php/HTTP ] ; then
 echo "40" ; sleep 1
 echo "XXX" ; echo "Installation PEAR"; echo "XXX"

	pear config-set preferred_state alpha 

	pear install -o -f --alldeps PEAR-1.9.1
	pear upgrade -o -f --alldeps PEAR

	pear install -o -f --alldeps DB DB_DataObject DB_DataObject_FormBuilder MDB2 Date
	pear install -o -f --alldeps HTML_Common HTML_QuickForm HTML_QuickForm_advmultiselect HTML_Table
	pear install -o -f --alldeps Auth_SASL Console_Getopt Archive_Tar Archive_Zip
	pear install -o -f --alldeps Net_SMTP Net_Socket Net_Traceroute Net_Ping
	pear install -o -f --alldeps Validate XML_RPC SOAP Log
	pear install -o -f --alldeps Numbers_Roman Numbers_Words Image_Canvas Image_Color Image_Graph Image_GraphViz
	pear install -o -f --alldeps HTTP

	pear install -o -f --alldeps PEAR-1.9.1
	pear upgrade -o -f --alldeps PEAR	
fi

 echo "80" ; sleep 1
 echo "XXX" ; echo "Installation PEAR"; echo "XXX"

 echo "100" ; sleep 1
 echo "XXX" ; echo "Terminer"; echo "XXX"
 sleep 2
) |
$DIALOG --backtitle "Installation Serveur Linux" \
	 --title "Installation PEAR" \
	 --gauge "Installation PEAR" 10 60 0 \

menu_installation_serveur_suite2
}

#############################################################################
# Fonction Installation PERL
#############################################################################

installation_perl()
{

(

if [ ! -d /usr/lib/perl/$version_perl/sys ] ; then
 echo "10" ; sleep 1
 echo "XXX" ; echo "Installation PERL"; echo "XXX"
	apt-get -y install perl &> /dev/null
fi

if [ ! -f /etc/ssl/openssl.cnf ] ; then
 echo "15" ; sleep 1
 echo "XXX" ; echo "Installation OpenSSL"; echo "XXX"
	apt-get -y install openssl &> /dev/null
fi

if [ ! -f /usr/lib/perl5/Net/SSLeay.pm ] ; then
 echo "20" ; sleep 1
 echo "XXX" ; echo "Installation libnet-ssleay-perl"; echo "XXX"
	apt-get -y install libnet-ssleay-perl &> /dev/null
fi

if [ ! -f /etc/perl/CPAN/Config.pm ] ||
   ! grep "'build_requires_install_policy' => q\[yes\]," /etc/perl/CPAN/Config.pm ; then

 echo "40" ; sleep 1
 echo "XXX" ; echo "Configuration PERL"; echo "XXX"

	cat <<- EOF > /etc/perl/CPAN/Config.pm

	# This is CPAN.pm's systemwide configuration file. This file provides
	# defaults for users, and the values can be changed in a per-user
	# configuration file. The user-config file is being looked for as
	# /root/.cpan/CPAN/MyConfig.pm.

	\$CPAN::Config = {
	  'applypatch' => q[],
	  'auto_commit' => q[0],
	  'build_cache' => q[100],
	  'build_dir' => q[/root/.cpan/build],
	  'build_dir_reuse' => q[0],
	  'build_requires_install_policy' => q[ask/yes],
	  'bzip2' => q[],
	  'cache_metadata' => q[1],
	  'check_sigs' => q[0],
	  'colorize_output' => q[0],
	  'commandnumber_in_prompt' => q[1],
	  'connect_to_internet_ok' => q[1],
	  'cpan_home' => q[/root/.cpan],
	  'curl' => q[],
	  'ftp' => q[],
	  'ftp_passive' => q[1],
	  'ftp_proxy' => q[],
	  'getcwd' => q[cwd],
	  'gpg' => q[/usr/bin/gpg],
	  'gzip' => q[/bin/gzip],
	  'halt_on_failure' => q[0],
	  'histfile' => q[/root/.cpan/histfile],
	  'histsize' => q[100],
	  'http_proxy' => q[],
	  'inactivity_timeout' => q[0],
	  'index_expire' => q[1],
	  'inhibit_startup_message' => q[0],
	  'keep_source_where' => q[/root/.cpan/sources],
	  'load_module_verbosity' => q[v],
	  'lynx' => q[],
	  'make' => q[/usr/bin/make],
	  'make_arg' => q[],
	  'make_install_arg' => q[],
	  'make_install_make_command' => q[/usr/bin/make],
	  'makepl_arg' => q[INSTALLDIRS=site],
	  'mbuild_arg' => q[],
	  'mbuild_install_arg' => q[],
	  'mbuild_install_build_command' => q[./Build],
	  'mbuildpl_arg' => q[--installdirs site],
	  'ncftp' => q[],
	  'ncftpget' => q[],
	  'no_proxy' => q[],
	  'pager' => q[/bin/more],
	  'patch' => q[/usr/bin/patch],
	  'perl5lib_verbosity' => q[v],
	  'prefer_installer' => q[MB],
	  'prefs_dir' => q[/root/.cpan/prefs],
	  'prerequisites_policy' => q[ask],
	  'proxy_pass' => q[],
	  'proxy_user' => q[],
	  'scan_cache' => q[atstart],
	  'shell' => q[/bin/bash],
	  'show_unparsable_versions' => q[0],
	  'show_upload_date' => q[0],
	  'show_zero_versions' => q[0],
	  'tar' => q[/bin/tar],
	  'tar_verbosity' => q[v],
	  'term_is_latin' => q[1],
	  'term_ornaments' => q[1],
	  'test_report' => q[0],
	  'trust_test_report_history' => q[0],
	  'unzip' => q[],
	  'urllist' => [],
	  'use_sqlite' => q[0],
	  'wget' => q[/usr/bin/wget],
	  'yaml_load_code' => q[0],
	  'yaml_module' => q[YAML],
	};
	1;
	__END__
	EOF


	sed -i "s/'build_requires_install_policy' => q\[ask\/yes\],/'build_requires_install_policy' => q\[yes\],/g" /etc/perl/CPAN/Config.pm
	sed -i "s/'prerequisites_policy' => q\[ask\],/'prerequisites_policy' => q\[follow\],/g" /etc/perl/CPAN/Config.pm
fi

if [ -f /etc/apt/apt.conf ] ; then
 echo "60" ; sleep 1
 echo "XXX" ; echo "Recherche d'un Proxy"; echo "XXX"

	if grep "http::Proxy" /etc/apt/apt.conf > /dev/null ; then
	fichtemp=`tempfile 2>/dev/null` || fichtemp=/tmp/test$$

	sed -n 's/.*Proxy\ \(.*\);.*/\1/ip' /etc/apt/apt.conf > $fichtemp

	adresse_ip=$(sed -n 's/.*@\(.*\)\/.*/\1/ip' $fichtemp)
	

	sed -n 's/.*http:\/\/\(.*\):.*/\1/ip' /etc/apt/apt.conf  > $fichtemp

	user_proxy=$(sed -n 's/^\(.*\):.*/\1/ip' $fichtemp)
	password_proxy=$(sed -n 's/.*:\(.*\)@.*/\1/ip' $fichtemp)

	sed -i "s/'http_proxy' => q\[\],/'http_proxy' => q\[http:\/\/$adresse_ip\/\],/g" /etc/perl/CPAN/Config.pm
	sed -i "s/'proxy_pass' => q\[\],/'proxy_pass' => q\[$password_proxy\],/g" /etc/perl/CPAN/Config.pm
	sed -i "s/'proxy_user' => q\[\],/'proxy_user' => q\[$user_proxy\],/g" /etc/perl/CPAN/Config.pm


	rm -f $fichtemp
	fi
fi

if [ ! -f /usr/local/share/perl/$version_perl/YAML.pm ] ; then
 echo "80" ; sleep 1
 echo "XXX" ; echo "Installation YAML"; echo "XXX"
	cpan -f install YAML &> /dev/null
fi

 echo "100" ; sleep 1
 echo "XXX" ; echo "Terminer"; echo "XXX"
 sleep 2
) |
$DIALOG --backtitle "Installation Serveur Linux" \
	 --title "Installation PERL" \
	 --gauge "Installation PERL" 10 60 0 \

menu_installation_serveur_suite2
}

#############################################################################
# Demarrage du programme
#############################################################################

menu